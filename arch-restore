#!/bin/bash

set -euo pipefail

VERSION="1.0.1"
PROGNAME="$(basename "$0")"

usage() {
	cat<<EOF
$PROGNAME version $VERSION

Usage: sudo $PROGNAME [options] [archive]

Options:
    -h, --help		-Show this help message
    -V, --version 	-Show script version

Example sudo $PROGNAME
	sudo $PROGNAME 2025-08-12_12-49-54.tar.gz
	$PROGNAME -V

EOF
}
ARCHIVE=""

if [ $# -gt 0 ]; then
	case "$1" in
		-h|--help)
			usage
			exit 0	
			;;
		-V|--version)
			echo ""$PROGNAME" version $VERSION"
			exit 0
			;;
		*)
			ARCHIVE="$1"
			shift
			;;
		-*)
			echo "Unknown option: $1"
			exit 1
			;;
	esac
fi

BACKUP_ROOT="$HOME/backup"

if [ -z "$ARCHIVE" ]; then
	echo "[*] No archive specified, searching fot the latest backup in $BACKUP_ROOT ..."
	ARCHIVE=$(ls -t "$BACKUP_ROOT"/*.tar.gz 2>/dev/null | head -n 1 || true)
	if [ -z "$ARCHIVE" ]; then
		echo "[!] No backup archive found in $BACKUP_ROOT"
		exit 1
	fi
	echo "[*] Using latest backup: $ARCHIVE"
else
	if [ ! -f "$ARCHIVE" ]; then
		echo "[!] Specified archive not found: $ARCHIVE"
		exit 1
	fi
	echo "[*] Using specified backup archive: $ARCHIVE"
fi

if [ -f "$ARCHIVE.sha256" ]; then
	echo "[*] Checking archive integrity"
	sha256sum -c "$ARCHIVE.sha256" || { echo "[!] ERROR: Arcive is damaged!"; exit 1; }
else
	echo "[!] Checksum not found"
fi

TMP_DIR="$HOME/tmp_restore_$(date +%s)"
mkdir -p "$TMP_DIR"
tar -xzf "$ARCHIVE" -C "$TMP_DIR"
BACKUP_DIR="$TMP_DIR/$(basename "$ARCHIVE" .tar.gz)"

set +x

if [ -f "$BACKUP_DIR/pkglist.txt" ]; then
	echo "[*] Installing packages from pacman ..."
	pacman -S --needed - < "$BACKUP_DIR/pkglist.txt" || true
fi

if [ -f "$BACKUP_DIR/aur_pkglist.txt" ]; then
	if command -v yay >/dev/null 2>&1; then
		echo "[*] Installing AUR packages from yay"
		yay -S --needed - < "$BACKUP_DIR/aur_pkglist.txt" || true
	elif command -v paru >/dev/null 2>&1; then
		echo "[*] Installing AUR packages from yay"
		paru -S --needed - < "$BACKUP_DIR/aur_pkglist.txt" || true
	fi
fi

if [ -d "$BACKUP_DIR/etc" ]; then
	echo "[*] Create a backip copy of the current /etc"
	cp -a /etc "$HOME/etc.backup_$(date +%Y-%m-%d_%H-%M-%S)"
	echo "[*] Copy configs to /etc"
	rsync -aAX "$BACKUP_DIR/etc/" /etc/
fi

if [ -d "$BACKUP_DIR/home_configs" ]; then
	echo "[*] Copy configs to $HOME"
	rsync -aAX "$BACKUP_DIR/home_configs/" "$HOME/"
fi

rm -rf "$TMP_DIR"

echo "Restore complete"
